name: Publish to Google Cloud Artifact Registry

on:
  release:
    types: [create, published]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel twine build keyring keyrings.google-artifactregistry-auth

    - name: Extract tag name
      id: extract_tag
      run: echo "RELEASE_TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

    - name: Update version in pyproject.toml
      run: |
        sed -i.bak "s/^version = \".*\"/version = \"${{ env.RELEASE_TAG }}\"/" pyproject.toml
        cat pyproject.toml

    - name: Set up Google Cloud authentication
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.SERVICEACCT }}

    - name: Upload to Artifact Registry
      env:
        GCLOUD_REPO: ${{ secrets.GCLOUD_REPO }}
        GCLOUD_PROJECT: ${{ secrets.GCLOUD_PROJECT }}
        SERVICE_ACCT: ${{ secrets.SERVICEACCT }}
      run: |
        gcloud config set project "$GCLOUD_PROJECT"
        gcloud config set artifacts/location us-east1
        gcloud config set artifacts/repository "$GCLOUD_REPO"
        
        echo "$SERVICE_ACCT" > file.json

        gcloud auth activate-service-account --key-file=file.json --project="$GCLOUD_PROJECT"
        gcloud artifacts print-settings python --project="$GCLOUD_PROJECT" --repository="$GCLOUD_REPO" --location=us-east1 --json-key=file.json > ~/.pypirc

        python3 -m build
        twine upload --verbose --repository python dist/* 
